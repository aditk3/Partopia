plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'com.moowork.node' version '1.3.1' // This is for the tasks below for React Build Tasks
	id 'java'
}

group = 'com.cognizant'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-validation')
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation group: 'org.springframework.security', name: 'spring-security-core', version: '5.6.1'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
}

tasks.named('test') {
	useJUnitPlatform()
}

node {
	download = false
	// Set the work directory for unpacking node
	workDir = file("${project.buildDir}/src/main/ui/nodejs")
	// Set the work directory for NPM
	npmWorkDir = file("${project.buildDir}/src/main/ui/npm")
}
task appNpmInstall(type: NpmTask) {
	description = "Installs all dependencies from package.json"
	workingDir = file("${project.projectDir}/src/main/ui")
	args = ["install"]
}
task appNpmBuild(type: NpmTask) {
	description = "Builds production version of the webapp"
	workingDir = file("${project.projectDir}/src/main/ui")
	args = ["run", "build"]
}
task copyWebApp(type: Copy) {
	from 'src/main/ui/build/'
	into 'build/resources/main/static/'
}
appNpmBuild.dependsOn appNpmInstall
copyWebApp.dependsOn appNpmBuild
compileJava.dependsOn copyWebApp
